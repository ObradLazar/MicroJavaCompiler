INFO  20:42:57,007 - ==========================================================================================
INFO  20:42:57,008 - Compiling source file C:\Users\LENOVO\Desktop\Njihov projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\.\test\test301.mj
INFO  20:42:57,008 - ==========================================================================================
INFO  20:42:57,012 - Parsing source file
INFO  20:42:57,012 - ==========================================================================================
INFO  20:42:57,033 - #2 program
INFO  20:42:57,033 - #29 test301
INFO  20:42:57,033 - #7 const
INFO  20:42:57,035 - #29 int
INFO  20:42:57,035 - #29 nula
INFO  20:42:57,036 - #12 =
INFO  20:42:57,037 - #26 0
INFO  20:42:57,037 - #9 ;
INFO  20:42:57,038 - #7 const
INFO  20:42:57,038 - #29 int
INFO  20:42:57,038 - #29 jedan
INFO  20:42:57,039 - #12 =
INFO  20:42:57,039 - #26 1
INFO  20:42:57,039 - #9 ;
INFO  20:42:57,039 - #7 const
INFO  20:42:57,039 - #29 int
INFO  20:42:57,039 - #29 pet
INFO  20:42:57,039 - #12 =
INFO  20:42:57,039 - #26 5
INFO  20:42:57,039 - #9 ;
INFO  20:42:57,039 - #7 const
INFO  20:42:57,039 - #29 bool
INFO  20:42:57,039 - #29 kekinBool
INFO  20:42:57,039 - #12 =
INFO  20:42:57,039 - #27 true
INFO  20:42:57,039 - #9 ;
INFO  20:42:57,040 - #7 const
INFO  20:42:57,040 - #29 char
INFO  20:42:57,040 - #29 kekinChar
INFO  20:42:57,040 - #12 =
INFO  20:42:57,040 - #28 k
INFO  20:42:57,040 - #9 ;
INFO  20:42:57,040 - #29 int
INFO  20:42:57,040 - #29 niz
INFO  20:42:57,040 - #22 [
INFO  20:42:57,040 - #23 ]
INFO  20:42:57,040 - #9 ;
INFO  20:42:57,040 - #29 char
INFO  20:42:57,041 - #29 nizch
INFO  20:42:57,041 - #22 [
INFO  20:42:57,041 - #23 ]
INFO  20:42:57,041 - #9 ;
INFO  20:42:57,041 - #29 int
INFO  20:42:57,042 - #29 a
INFO  20:42:57,042 - #9 ;
INFO  20:42:57,042 - #29 set
INFO  20:42:57,042 - #29 s1
INFO  20:42:57,042 - #10 ,
INFO  20:42:57,042 - #29 s2
INFO  20:42:57,042 - #10 ,
INFO  20:42:57,042 - #29 s3
INFO  20:42:57,042 - #9 ;
INFO  20:42:57,042 - #20 {
INFO  20:42:57,042 - #3 void
INFO  20:42:57,043 - #29 main
INFO  20:42:57,043 - #24 (
INFO  20:42:57,044 - #25 )
INFO  20:42:57,044 - #29 int
INFO  20:42:57,045 - #29 bodovi
INFO  20:42:57,045 - #9 ;
INFO  20:42:57,045 - #29 int
INFO  20:42:57,045 - #29 temp
INFO  20:42:57,045 - #9 ;
INFO  20:42:57,045 - #20 {
INFO  20:42:57,045 - #29 bodovi
INFO  20:42:57,046 - #12 =
INFO  20:42:57,046 - #26 0
INFO  20:42:57,046 - #9 ;
INFO  20:42:57,046 - #29 bodovi
INFO  20:42:57,046 - #13 ++
INFO  20:42:57,046 - #9 ;
INFO  20:42:57,046 - #29 bodovi
INFO  20:42:57,046 - #12 =
INFO  20:42:57,046 - #29 bodovi
INFO  20:42:57,046 - #16 +
INFO  20:42:57,047 - #29 jedan
INFO  20:42:57,047 - #9 ;
INFO  20:42:57,048 - #29 bodovi
INFO  20:42:57,048 - #12 =
INFO  20:42:57,048 - #29 bodovi
INFO  20:42:57,048 - #19 *
INFO  20:42:57,048 - #29 pet
INFO  20:42:57,049 - #9 ;
INFO  20:42:57,049 - #29 bodovi
INFO  20:42:57,049 - #14 --
INFO  20:42:57,049 - #9 ;
INFO  20:42:57,049 - #4 print
INFO  20:42:57,049 - #24 (
INFO  20:42:57,049 - #29 bodovi
INFO  20:42:57,049 - #25 )
INFO  20:42:57,049 - #9 ;
INFO  20:42:57,050 - #4 print
INFO  20:42:57,050 - #24 (
INFO  20:42:57,050 - #29 eol
INFO  20:42:57,050 - #25 )
INFO  20:42:57,050 - #9 ;
INFO  20:42:57,050 - #4 print
INFO  20:42:57,050 - #24 (
INFO  20:42:57,050 - #29 bodovi
INFO  20:42:57,050 - #25 )
INFO  20:42:57,050 - #9 ;
INFO  20:42:57,050 - #4 print
INFO  20:42:57,050 - #24 (
INFO  20:42:57,050 - #29 eol
INFO  20:42:57,050 - #25 )
INFO  20:42:57,050 - #9 ;
INFO  20:42:57,050 - #4 print
INFO  20:42:57,051 - #24 (
INFO  20:42:57,051 - #29 niz
INFO  20:42:57,051 - #22 [
INFO  20:42:57,051 - #26 2
INFO  20:42:57,051 - #23 ]
INFO  20:42:57,051 - #25 )
INFO  20:42:57,051 - #9 ;
INFO  20:42:57,051 - #4 print
INFO  20:42:57,051 - #24 (
INFO  20:42:57,051 - #29 eol
INFO  20:42:57,051 - #25 )
INFO  20:42:57,051 - #9 ;
INFO  20:42:57,052 - #21 }
INFO  20:42:57,052 - #21 }
INFO  20:42:57,054 - ==========================================================================================
INFO  20:42:57,054 - Parsing successful
INFO  20:42:57,054 - ==========================================================================================
INFO  20:42:57,055 - Abstract syntax tree
 Program(
   ProgramName(
    test301
   ) [ProgramName]
   DeclarationList(
     DeclarationList(
       DeclarationList(
         DeclarationList(
           DeclarationList(
             DeclarationList(
               DeclarationList(
                 DeclarationList(
                   DeclarationList(
                     NoDeclarationList(
                     ) [NoDeclarationList]
                     DeclarationConstant(
                       ConstDecl(
                         Type(
                          int
                         ) [Type]
                         ConstDeclListSignle(
                           ConstDeclaration(
                            nula
                             ConstTypeNumber(
                              0
                             ) [ConstTypeNumber]
                           ) [ConstDeclaration]
                         ) [ConstDeclListSignle]
                       ) [ConstDecl]
                     ) [DeclarationConstant]
                   ) [DeclarationList]
                   DeclarationConstant(
                     ConstDecl(
                       Type(
                        int
                       ) [Type]
                       ConstDeclListSignle(
                         ConstDeclaration(
                          jedan
                           ConstTypeNumber(
                            1
                           ) [ConstTypeNumber]
                         ) [ConstDeclaration]
                       ) [ConstDeclListSignle]
                     ) [ConstDecl]
                   ) [DeclarationConstant]
                 ) [DeclarationList]
                 DeclarationConstant(
                   ConstDecl(
                     Type(
                      int
                     ) [Type]
                     ConstDeclListSignle(
                       ConstDeclaration(
                        pet
                         ConstTypeNumber(
                          5
                         ) [ConstTypeNumber]
                       ) [ConstDeclaration]
                     ) [ConstDeclListSignle]
                   ) [ConstDecl]
                 ) [DeclarationConstant]
               ) [DeclarationList]
               DeclarationConstant(
                 ConstDecl(
                   Type(
                    bool
                   ) [Type]
                   ConstDeclListSignle(
                     ConstDeclaration(
                      kekinBool
                       ConstTypeBoolean(
                        true
                       ) [ConstTypeBoolean]
                     ) [ConstDeclaration]
                   ) [ConstDeclListSignle]
                 ) [ConstDecl]
               ) [DeclarationConstant]
             ) [DeclarationList]
             DeclarationConstant(
               ConstDecl(
                 Type(
                  char
                 ) [Type]
                 ConstDeclListSignle(
                   ConstDeclaration(
                    kekinChar
                     ConstTypeCharacter(
                      k
                     ) [ConstTypeCharacter]
                   ) [ConstDeclaration]
                 ) [ConstDeclListSignle]
               ) [ConstDecl]
             ) [DeclarationConstant]
           ) [DeclarationList]
           DeclarationVariable(
             VarDecl(
               Type(
                int
               ) [Type]
               VarDeclListSingle(
                 VariableArray(
                  niz
                 ) [VariableArray]
               ) [VarDeclListSingle]
             ) [VarDecl]
           ) [DeclarationVariable]
         ) [DeclarationList]
         DeclarationVariable(
           VarDecl(
             Type(
              char
             ) [Type]
             VarDeclListSingle(
               VariableArray(
                nizch
               ) [VariableArray]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [DeclarationVariable]
       ) [DeclarationList]
       DeclarationVariable(
         VarDecl(
           Type(
            int
           ) [Type]
           VarDeclListSingle(
             VariableIdent(
              a
             ) [VariableIdent]
           ) [VarDeclListSingle]
         ) [VarDecl]
       ) [DeclarationVariable]
     ) [DeclarationList]
     DeclarationVariable(
       VarDecl(
         Type(
          set
         ) [Type]
         VarDeclListMultiple(
           VarDeclListMultiple(
             VarDeclListSingle(
               VariableIdent(
                s1
               ) [VariableIdent]
             ) [VarDeclListSingle]
             VariableIdent(
              s2
             ) [VariableIdent]
           ) [VarDeclListMultiple]
           VariableIdent(
            s3
           ) [VariableIdent]
         ) [VarDeclListMultiple]
       ) [VarDecl]
     ) [DeclarationVariable]
   ) [DeclarationList]
   MethodDeclarationListMultiple(
     NoMethodDeclList(
     ) [NoMethodDeclList]
     MethodDeclaration(
       MethVoid(
       ) [MethVoid]
       MethodName(
        main
       ) [MethodName]
       NoFormPars(
       ) [NoFormPars]
       VarDeclarationArray(
         VarDeclarationArray(
           NoVarDeclarationArray(
           ) [NoVarDeclarationArray]
           VarDecl(
             Type(
              int
             ) [Type]
             VarDeclListSingle(
               VariableIdent(
                bodovi
               ) [VariableIdent]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [VarDeclarationArray]
         VarDecl(
           Type(
            int
           ) [Type]
           VarDeclListSingle(
             VariableIdent(
              temp
             ) [VariableIdent]
           ) [VarDeclListSingle]
         ) [VarDecl]
       ) [VarDeclarationArray]
       StatementListMultiple(
         StatementListMultiple(
           StatementListMultiple(
             StatementListMultiple(
               StatementListMultiple(
                 StatementListMultiple(
                   StatementListMultiple(
                     StatementListMultiple(
                       StatementListMultiple(
                         StatementListMultiple(
                           StatementListMultiple(
                             NoStatementList(
                             ) [NoStatementList]
                             StatementDesignator(
                               DesignatorEqualExpr(
                                 DesignatorIdent(
                                  bodovi
                                 ) [DesignatorIdent]
                                 ExprPositive(
                                   SignleTerm(
                                     FactorConst(
                                       ConstTypeNumber(
                                        0
                                       ) [ConstTypeNumber]
                                     ) [FactorConst]
                                   ) [SignleTerm]
                                 ) [ExprPositive]
                               ) [DesignatorEqualExpr]
                             ) [StatementDesignator]
                           ) [StatementListMultiple]
                           StatementDesignator(
                             DesignatorIncrement(
                               DesignatorIdent(
                                bodovi
                               ) [DesignatorIdent]
                             ) [DesignatorIncrement]
                           ) [StatementDesignator]
                         ) [StatementListMultiple]
                         StatementDesignator(
                           DesignatorEqualExpr(
                             DesignatorIdent(
                              bodovi
                             ) [DesignatorIdent]
                             ExprAddop(
                               ExprPositive(
                                 SignleTerm(
                                   FactorDesignator(
                                     DesignatorIdent(
                                      bodovi
                                     ) [DesignatorIdent]
                                   ) [FactorDesignator]
                                 ) [SignleTerm]
                               ) [ExprPositive]
                               Plus(
                               ) [Plus]
                               SignleTerm(
                                 FactorDesignator(
                                   DesignatorIdent(
                                    jedan
                                   ) [DesignatorIdent]
                                 ) [FactorDesignator]
                               ) [SignleTerm]
                             ) [ExprAddop]
                           ) [DesignatorEqualExpr]
                         ) [StatementDesignator]
                       ) [StatementListMultiple]
                       StatementDesignator(
                         DesignatorEqualExpr(
                           DesignatorIdent(
                            bodovi
                           ) [DesignatorIdent]
                           ExprPositive(
                             MultipleTerm(
                               SignleTerm(
                                 FactorDesignator(
                                   DesignatorIdent(
                                    bodovi
                                   ) [DesignatorIdent]
                                 ) [FactorDesignator]
                               ) [SignleTerm]
                               Mul(
                               ) [Mul]
                               FactorDesignator(
                                 DesignatorIdent(
                                  pet
                                 ) [DesignatorIdent]
                               ) [FactorDesignator]
                             ) [MultipleTerm]
                           ) [ExprPositive]
                         ) [DesignatorEqualExpr]
                       ) [StatementDesignator]
                     ) [StatementListMultiple]
                     StatementDesignator(
                       DesignatorDecrement(
                         DesignatorIdent(
                          bodovi
                         ) [DesignatorIdent]
                       ) [DesignatorDecrement]
                     ) [StatementDesignator]
                   ) [StatementListMultiple]
                   StatementPrint(
                     ExprPositive(
                       SignleTerm(
                         FactorDesignator(
                           DesignatorIdent(
                            bodovi
                           ) [DesignatorIdent]
                         ) [FactorDesignator]
                       ) [SignleTerm]
                     ) [ExprPositive]
                   ) [StatementPrint]
                 ) [StatementListMultiple]
                 StatementPrint(
                   ExprPositive(
                     SignleTerm(
                       FactorDesignator(
                         DesignatorIdent(
                          eol
                         ) [DesignatorIdent]
                       ) [FactorDesignator]
                     ) [SignleTerm]
                   ) [ExprPositive]
                 ) [StatementPrint]
               ) [StatementListMultiple]
               StatementPrint(
                 ExprPositive(
                   SignleTerm(
                     FactorDesignator(
                       DesignatorIdent(
                        bodovi
                       ) [DesignatorIdent]
                     ) [FactorDesignator]
                   ) [SignleTerm]
                 ) [ExprPositive]
               ) [StatementPrint]
             ) [StatementListMultiple]
             StatementPrint(
               ExprPositive(
                 SignleTerm(
                   FactorDesignator(
                     DesignatorIdent(
                      eol
                     ) [DesignatorIdent]
                   ) [FactorDesignator]
                 ) [SignleTerm]
               ) [ExprPositive]
             ) [StatementPrint]
           ) [StatementListMultiple]
           StatementPrint(
             ExprPositive(
               SignleTerm(
                 FactorDesignator(
                   DesignatorIdentExpr(
                    niz
                     ExprPositive(
                       SignleTerm(
                         FactorConst(
                           ConstTypeNumber(
                            2
                           ) [ConstTypeNumber]
                         ) [FactorConst]
                       ) [SignleTerm]
                     ) [ExprPositive]
                   ) [DesignatorIdentExpr]
                 ) [FactorDesignator]
               ) [SignleTerm]
             ) [ExprPositive]
           ) [StatementPrint]
         ) [StatementListMultiple]
         StatementPrint(
           ExprPositive(
             SignleTerm(
               FactorDesignator(
                 DesignatorIdent(
                  eol
                 ) [DesignatorIdent]
               ) [FactorDesignator]
             ) [SignleTerm]
           ) [ExprPositive]
         ) [StatementPrint]
       ) [StatementListMultiple]
     ) [MethodDeclaration]
   ) [MethodDeclarationListMultiple]
 ) [Program]
INFO  20:42:57,055 - ==========================================================================================
INFO  20:42:57,056 - Checking program semantics
INFO  20:42:57,056 - ==========================================================================================
