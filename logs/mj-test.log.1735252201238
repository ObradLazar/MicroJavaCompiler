INFO  23:20:49,293 - ==========================================================================================
INFO  23:20:49,293 - Compiling source file C:\Users\LENOVO\Desktop\Njihov projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\.\test\test301.mj
INFO  23:20:49,293 - ==========================================================================================
INFO  23:20:49,297 - Parsing source file
INFO  23:20:49,297 - ==========================================================================================
INFO  23:20:49,319 - #2 program
INFO  23:20:49,319 - #29 test301
INFO  23:20:49,319 - #7 const
INFO  23:20:49,320 - #29 int
INFO  23:20:49,320 - #29 nula
INFO  23:20:49,321 - #12 =
INFO  23:20:49,322 - #26 0
INFO  23:20:49,322 - #9 ;
INFO  23:20:49,323 - #7 const
INFO  23:20:49,323 - #29 int
INFO  23:20:49,323 - #29 jedan
INFO  23:20:49,323 - #12 =
INFO  23:20:49,323 - #26 1
INFO  23:20:49,323 - #9 ;
INFO  23:20:49,324 - #7 const
INFO  23:20:49,324 - #29 int
INFO  23:20:49,324 - #29 pet
INFO  23:20:49,324 - #12 =
INFO  23:20:49,324 - #26 5
INFO  23:20:49,324 - #9 ;
INFO  23:20:49,324 - #7 const
INFO  23:20:49,324 - #29 bool
INFO  23:20:49,324 - #29 kekinBool
INFO  23:20:49,324 - #12 =
INFO  23:20:49,324 - #27 true
INFO  23:20:49,324 - #9 ;
INFO  23:20:49,324 - #7 const
INFO  23:20:49,324 - #29 char
INFO  23:20:49,324 - #29 kekinChar
INFO  23:20:49,324 - #12 =
INFO  23:20:49,324 - #28 k
INFO  23:20:49,325 - #9 ;
INFO  23:20:49,325 - #29 int
INFO  23:20:49,325 - #29 niz
INFO  23:20:49,325 - #22 [
INFO  23:20:49,325 - #23 ]
INFO  23:20:49,325 - #9 ;
INFO  23:20:49,325 - #29 char
INFO  23:20:49,326 - #29 nizch
INFO  23:20:49,326 - #22 [
INFO  23:20:49,326 - #23 ]
INFO  23:20:49,326 - #9 ;
INFO  23:20:49,326 - #29 int
INFO  23:20:49,326 - #29 a
INFO  23:20:49,326 - #9 ;
INFO  23:20:49,326 - #29 set
INFO  23:20:49,326 - #29 s1
INFO  23:20:49,326 - #10 ,
INFO  23:20:49,326 - #29 s2
INFO  23:20:49,326 - #10 ,
INFO  23:20:49,326 - #29 s3
INFO  23:20:49,326 - #9 ;
INFO  23:20:49,326 - #20 {
INFO  23:20:49,327 - #3 void
INFO  23:20:49,327 - #29 asd
INFO  23:20:49,328 - #24 (
INFO  23:20:49,328 - #29 int
INFO  23:20:49,328 - #29 a
INFO  23:20:49,328 - #10 ,
INFO  23:20:49,328 - #29 int
INFO  23:20:49,328 - #29 b
INFO  23:20:49,328 - #25 )
INFO  23:20:49,329 - #29 char
INFO  23:20:49,329 - #29 c
INFO  23:20:49,329 - #9 ;
INFO  23:20:49,329 - #29 int
INFO  23:20:49,329 - #29 g
INFO  23:20:49,329 - #9 ;
INFO  23:20:49,330 - #20 {
INFO  23:20:49,330 - #8 return
INFO  23:20:49,330 - #9 ;
INFO  23:20:49,330 - #21 }
INFO  23:20:49,331 - #3 void
INFO  23:20:49,331 - #29 main
INFO  23:20:49,331 - #24 (
INFO  23:20:49,331 - #25 )
INFO  23:20:49,331 - #29 int
INFO  23:20:49,332 - #29 bodovi
INFO  23:20:49,332 - #9 ;
INFO  23:20:49,332 - #29 int
INFO  23:20:49,332 - #29 temp
INFO  23:20:49,332 - #9 ;
INFO  23:20:49,332 - #20 {
INFO  23:20:49,332 - #29 bodovi
INFO  23:20:49,332 - #12 =
INFO  23:20:49,332 - #26 0
INFO  23:20:49,332 - #9 ;
INFO  23:20:49,332 - #29 bodovi
INFO  23:20:49,332 - #13 ++
INFO  23:20:49,333 - #9 ;
INFO  23:20:49,333 - #29 bodovi
INFO  23:20:49,333 - #12 =
INFO  23:20:49,333 - #29 bodovi
INFO  23:20:49,333 - #16 +
INFO  23:20:49,333 - #29 jedan
INFO  23:20:49,334 - #9 ;
INFO  23:20:49,334 - #29 bodovi
INFO  23:20:49,334 - #12 =
INFO  23:20:49,334 - #29 bodovi
INFO  23:20:49,334 - #19 *
INFO  23:20:49,334 - #29 pet
INFO  23:20:49,335 - #9 ;
INFO  23:20:49,335 - #29 bodovi
INFO  23:20:49,335 - #14 --
INFO  23:20:49,335 - #9 ;
INFO  23:20:49,336 - #4 print
INFO  23:20:49,336 - #24 (
INFO  23:20:49,336 - #29 bodovi
INFO  23:20:49,336 - #25 )
INFO  23:20:49,336 - #9 ;
INFO  23:20:49,336 - #4 print
INFO  23:20:49,336 - #24 (
INFO  23:20:49,336 - #29 eol
INFO  23:20:49,336 - #25 )
INFO  23:20:49,336 - #9 ;
INFO  23:20:49,336 - #29 niz
INFO  23:20:49,336 - #12 =
INFO  23:20:49,336 - #6 new
INFO  23:20:49,336 - #29 int
INFO  23:20:49,336 - #22 [
INFO  23:20:49,336 - #26 3
INFO  23:20:49,336 - #23 ]
INFO  23:20:49,336 - #9 ;
INFO  23:20:49,337 - #4 print
INFO  23:20:49,337 - #24 (
INFO  23:20:49,337 - #29 bodovi
INFO  23:20:49,337 - #25 )
INFO  23:20:49,337 - #9 ;
INFO  23:20:49,337 - #4 print
INFO  23:20:49,337 - #24 (
INFO  23:20:49,337 - #29 eol
INFO  23:20:49,337 - #25 )
INFO  23:20:49,337 - #9 ;
INFO  23:20:49,337 - #4 print
INFO  23:20:49,337 - #24 (
INFO  23:20:49,337 - #29 eol
INFO  23:20:49,337 - #25 )
INFO  23:20:49,337 - #9 ;
INFO  23:20:49,337 - #4 print
INFO  23:20:49,337 - #24 (
INFO  23:20:49,337 - #29 eol
INFO  23:20:49,337 - #25 )
INFO  23:20:49,337 - #9 ;
INFO  23:20:49,337 - #4 print
INFO  23:20:49,338 - #24 (
INFO  23:20:49,338 - #29 eol
INFO  23:20:49,338 - #25 )
INFO  23:20:49,338 - #9 ;
INFO  23:20:49,338 - #29 a
INFO  23:20:49,338 - #12 =
INFO  23:20:49,338 - #26 1
INFO  23:20:49,338 - #9 ;
INFO  23:20:49,338 - #5 read
INFO  23:20:49,338 - #24 (
INFO  23:20:49,338 - #29 bodovi
INFO  23:20:49,338 - #25 )
INFO  23:20:49,338 - #9 ;
INFO  23:20:49,338 - #29 bodovi
INFO  23:20:49,338 - #12 =
INFO  23:20:49,338 - #15 -
INFO  23:20:49,338 - #29 bodovi
INFO  23:20:49,338 - #16 +
INFO  23:20:49,338 - #24 (
INFO  23:20:49,338 - #29 pet
INFO  23:20:49,338 - #19 *
INFO  23:20:49,339 - #29 a
INFO  23:20:49,339 - #18 /
INFO  23:20:49,339 - #26 2
INFO  23:20:49,339 - #15 -
INFO  23:20:49,339 - #29 nula
INFO  23:20:49,340 - #25 )
INFO  23:20:49,340 - #19 *
INFO  23:20:49,340 - #29 bodovi
INFO  23:20:49,340 - #15 -
INFO  23:20:49,340 - #24 (
INFO  23:20:49,340 - #26 3
INFO  23:20:49,340 - #17 %
INFO  23:20:49,340 - #26 2
INFO  23:20:49,341 - #16 +
INFO  23:20:49,341 - #26 3
INFO  23:20:49,341 - #19 *
INFO  23:20:49,341 - #26 2
INFO  23:20:49,341 - #15 -
INFO  23:20:49,341 - #26 7
INFO  23:20:49,341 - #25 )
INFO  23:20:49,341 - #9 ;
INFO  23:20:49,341 - #4 print
INFO  23:20:49,341 - #24 (
INFO  23:20:49,341 - #29 bodovi
INFO  23:20:49,341 - #25 )
INFO  23:20:49,341 - #9 ;
INFO  23:20:49,341 - #29 s1
INFO  23:20:49,341 - #12 =
INFO  23:20:49,342 - #6 new
INFO  23:20:49,342 - #29 set
INFO  23:20:49,342 - #22 [
INFO  23:20:49,342 - #26 5
INFO  23:20:49,342 - #23 ]
INFO  23:20:49,342 - #9 ;
INFO  23:20:49,342 - #29 s2
INFO  23:20:49,342 - #12 =
INFO  23:20:49,342 - #6 new
INFO  23:20:49,342 - #29 set
INFO  23:20:49,342 - #22 [
INFO  23:20:49,342 - #26 5
INFO  23:20:49,342 - #23 ]
INFO  23:20:49,342 - #9 ;
INFO  23:20:49,342 - #29 s3
INFO  23:20:49,342 - #12 =
INFO  23:20:49,342 - #6 new
INFO  23:20:49,342 - #29 set
INFO  23:20:49,342 - #22 [
INFO  23:20:49,342 - #26 10
INFO  23:20:49,342 - #23 ]
INFO  23:20:49,342 - #9 ;
INFO  23:20:49,342 - #4 print
INFO  23:20:49,342 - #24 (
INFO  23:20:49,342 - #29 s3
INFO  23:20:49,342 - #25 )
INFO  23:20:49,342 - #9 ;
INFO  23:20:49,342 - #4 print
INFO  23:20:49,343 - #24 (
INFO  23:20:49,343 - #29 eol
INFO  23:20:49,343 - #25 )
INFO  23:20:49,343 - #9 ;
INFO  23:20:49,343 - #29 s1
INFO  23:20:49,343 - #12 =
INFO  23:20:49,343 - #6 new
INFO  23:20:49,343 - #29 set
INFO  23:20:49,343 - #22 [
INFO  23:20:49,343 - #26 5
INFO  23:20:49,343 - #23 ]
INFO  23:20:49,343 - #9 ;
INFO  23:20:49,343 - #29 s2
INFO  23:20:49,343 - #12 =
INFO  23:20:49,343 - #6 new
INFO  23:20:49,343 - #29 set
INFO  23:20:49,343 - #22 [
INFO  23:20:49,343 - #26 5
INFO  23:20:49,343 - #23 ]
INFO  23:20:49,343 - #9 ;
INFO  23:20:49,343 - #29 s3
INFO  23:20:49,343 - #12 =
INFO  23:20:49,343 - #6 new
INFO  23:20:49,343 - #29 set
INFO  23:20:49,343 - #22 [
INFO  23:20:49,343 - #26 10
INFO  23:20:49,343 - #23 ]
INFO  23:20:49,343 - #9 ;
INFO  23:20:49,343 - #4 print
INFO  23:20:49,344 - #24 (
INFO  23:20:49,344 - #29 s3
INFO  23:20:49,344 - #25 )
INFO  23:20:49,344 - #9 ;
INFO  23:20:49,344 - #21 }
INFO  23:20:49,344 - #21 }
INFO  23:20:49,345 - ==========================================================================================
INFO  23:20:49,345 - Parsing successful
INFO  23:20:49,345 - ==========================================================================================
INFO  23:20:49,347 - Abstract syntax tree
 Program(
   ProgramName(
    test301
   ) [ProgramName]
   DeclarationList(
     DeclarationList(
       DeclarationList(
         DeclarationList(
           DeclarationList(
             DeclarationList(
               DeclarationList(
                 DeclarationList(
                   DeclarationList(
                     NoDeclarationList(
                     ) [NoDeclarationList]
                     DeclarationConstant(
                       ConstDecl(
                         Type(
                          int
                         ) [Type]
                         ConstDeclListSignle(
                           ConstDeclaration(
                            nula
                             ConstTypeNumber(
                              0
                             ) [ConstTypeNumber]
                           ) [ConstDeclaration]
                         ) [ConstDeclListSignle]
                       ) [ConstDecl]
                     ) [DeclarationConstant]
                   ) [DeclarationList]
                   DeclarationConstant(
                     ConstDecl(
                       Type(
                        int
                       ) [Type]
                       ConstDeclListSignle(
                         ConstDeclaration(
                          jedan
                           ConstTypeNumber(
                            1
                           ) [ConstTypeNumber]
                         ) [ConstDeclaration]
                       ) [ConstDeclListSignle]
                     ) [ConstDecl]
                   ) [DeclarationConstant]
                 ) [DeclarationList]
                 DeclarationConstant(
                   ConstDecl(
                     Type(
                      int
                     ) [Type]
                     ConstDeclListSignle(
                       ConstDeclaration(
                        pet
                         ConstTypeNumber(
                          5
                         ) [ConstTypeNumber]
                       ) [ConstDeclaration]
                     ) [ConstDeclListSignle]
                   ) [ConstDecl]
                 ) [DeclarationConstant]
               ) [DeclarationList]
               DeclarationConstant(
                 ConstDecl(
                   Type(
                    bool
                   ) [Type]
                   ConstDeclListSignle(
                     ConstDeclaration(
                      kekinBool
                       ConstTypeBoolean(
                        true
                       ) [ConstTypeBoolean]
                     ) [ConstDeclaration]
                   ) [ConstDeclListSignle]
                 ) [ConstDecl]
               ) [DeclarationConstant]
             ) [DeclarationList]
             DeclarationConstant(
               ConstDecl(
                 Type(
                  char
                 ) [Type]
                 ConstDeclListSignle(
                   ConstDeclaration(
                    kekinChar
                     ConstTypeCharacter(
                      k
                     ) [ConstTypeCharacter]
                   ) [ConstDeclaration]
                 ) [ConstDeclListSignle]
               ) [ConstDecl]
             ) [DeclarationConstant]
           ) [DeclarationList]
           DeclarationVariable(
             VarDecl(
               Type(
                int
               ) [Type]
               VarDeclListSingle(
                 VariableArray(
                  niz
                 ) [VariableArray]
               ) [VarDeclListSingle]
             ) [VarDecl]
           ) [DeclarationVariable]
         ) [DeclarationList]
         DeclarationVariable(
           VarDecl(
             Type(
              char
             ) [Type]
             VarDeclListSingle(
               VariableArray(
                nizch
               ) [VariableArray]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [DeclarationVariable]
       ) [DeclarationList]
       DeclarationVariable(
         VarDecl(
           Type(
            int
           ) [Type]
           VarDeclListSingle(
             VariableIdent(
              a
             ) [VariableIdent]
           ) [VarDeclListSingle]
         ) [VarDecl]
       ) [DeclarationVariable]
     ) [DeclarationList]
     DeclarationVariable(
       VarDecl(
         Type(
          set
         ) [Type]
         VarDeclListMultiple(
           VarDeclListMultiple(
             VarDeclListSingle(
               VariableIdent(
                s1
               ) [VariableIdent]
             ) [VarDeclListSingle]
             VariableIdent(
              s2
             ) [VariableIdent]
           ) [VarDeclListMultiple]
           VariableIdent(
            s3
           ) [VariableIdent]
         ) [VarDeclListMultiple]
       ) [VarDecl]
     ) [DeclarationVariable]
   ) [DeclarationList]
   MethodDeclarationListMultiple(
     MethodDeclarationListMultiple(
       NoMethodDeclList(
       ) [NoMethodDeclList]
       MethodDeclaration(
         MethVoid(
         ) [MethVoid]
         MethodName(
          asd
         ) [MethodName]
         FormParsDoExist(
           FormParsListMultiple(
             FormPar(
               Type(
                int
               ) [Type]
              a
             ) [FormPar]
             FormParsListSignle(
               FormPar(
                 Type(
                  int
                 ) [Type]
                b
               ) [FormPar]
             ) [FormParsListSignle]
           ) [FormParsListMultiple]
         ) [FormParsDoExist]
         VarDeclarationArray(
           VarDeclarationArray(
             NoVarDeclarationArray(
             ) [NoVarDeclarationArray]
             VarDecl(
               Type(
                char
               ) [Type]
               VarDeclListSingle(
                 VariableIdent(
                  c
                 ) [VariableIdent]
               ) [VarDeclListSingle]
             ) [VarDecl]
           ) [VarDeclarationArray]
           VarDecl(
             Type(
              int
             ) [Type]
             VarDeclListSingle(
               VariableIdent(
                g
               ) [VariableIdent]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [VarDeclarationArray]
         StatementListMultiple(
           NoStatementList(
           ) [NoStatementList]
           StatementReturnEmpty(
           ) [StatementReturnEmpty]
         ) [StatementListMultiple]
       ) [MethodDeclaration]
     ) [MethodDeclarationListMultiple]
     MethodDeclaration(
       MethVoid(
       ) [MethVoid]
       MethodName(
        main
       ) [MethodName]
       NoFormPars(
       ) [NoFormPars]
       VarDeclarationArray(
         VarDeclarationArray(
           NoVarDeclarationArray(
           ) [NoVarDeclarationArray]
           VarDecl(
             Type(
              int
             ) [Type]
             VarDeclListSingle(
               VariableIdent(
                bodovi
               ) [VariableIdent]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [VarDeclarationArray]
         VarDecl(
           Type(
            int
           ) [Type]
           VarDeclListSingle(
             VariableIdent(
              temp
             ) [VariableIdent]
           ) [VarDeclListSingle]
         ) [VarDecl]
       ) [VarDeclarationArray]
       StatementListMultiple(
         StatementListMultiple(
           StatementListMultiple(
             StatementListMultiple(
               StatementListMultiple(
                 StatementListMultiple(
                   StatementListMultiple(
                     StatementListMultiple(
                       StatementListMultiple(
                         StatementListMultiple(
                           StatementListMultiple(
                             StatementListMultiple(
                               StatementListMultiple(
                                 StatementListMultiple(
                                   StatementListMultiple(
                                     StatementListMultiple(
                                       StatementListMultiple(
                                         StatementListMultiple(
                                           StatementListMultiple(
                                             StatementListMultiple(
                                               StatementListMultiple(
                                                 StatementListMultiple(
                                                   StatementListMultiple(
                                                     StatementListMultiple(
                                                       StatementListMultiple(
                                                         StatementListMultiple(
                                                           NoStatementList(
                                                           ) [NoStatementList]
                                                           StatementDesignator(
                                                             DesignatorEqualExpr(
                                                               DesignatorIdent(
                                                                bodovi
                                                               ) [DesignatorIdent]
                                                               ExprPositive(
                                                                 SignleTerm(
                                                                   FactorConst(
                                                                     ConstTypeNumber(
                                                                      0
                                                                     ) [ConstTypeNumber]
                                                                   ) [FactorConst]
                                                                 ) [SignleTerm]
                                                               ) [ExprPositive]
                                                             ) [DesignatorEqualExpr]
                                                           ) [StatementDesignator]
                                                         ) [StatementListMultiple]
                                                         StatementDesignator(
                                                           DesignatorIncrement(
                                                             DesignatorIdent(
                                                              bodovi
                                                             ) [DesignatorIdent]
                                                           ) [DesignatorIncrement]
                                                         ) [StatementDesignator]
                                                       ) [StatementListMultiple]
                                                       StatementDesignator(
                                                         DesignatorEqualExpr(
                                                           DesignatorIdent(
                                                            bodovi
                                                           ) [DesignatorIdent]
                                                           ExprAddop(
                                                             ExprPositive(
                                                               SignleTerm(
                                                                 FactorDesignator(
                                                                   DesignatorIdent(
                                                                    bodovi
                                                                   ) [DesignatorIdent]
                                                                 ) [FactorDesignator]
                                                               ) [SignleTerm]
                                                             ) [ExprPositive]
                                                             Plus(
                                                             ) [Plus]
                                                             SignleTerm(
                                                               FactorDesignator(
                                                                 DesignatorIdent(
                                                                  jedan
                                                                 ) [DesignatorIdent]
                                                               ) [FactorDesignator]
                                                             ) [SignleTerm]
                                                           ) [ExprAddop]
                                                         ) [DesignatorEqualExpr]
                                                       ) [StatementDesignator]
                                                     ) [StatementListMultiple]
                                                     StatementDesignator(
                                                       DesignatorEqualExpr(
                                                         DesignatorIdent(
                                                          bodovi
                                                         ) [DesignatorIdent]
                                                         ExprPositive(
                                                           MultipleTerm(
                                                             SignleTerm(
                                                               FactorDesignator(
                                                                 DesignatorIdent(
                                                                  bodovi
                                                                 ) [DesignatorIdent]
                                                               ) [FactorDesignator]
                                                             ) [SignleTerm]
                                                             Mul(
                                                             ) [Mul]
                                                             FactorDesignator(
                                                               DesignatorIdent(
                                                                pet
                                                               ) [DesignatorIdent]
                                                             ) [FactorDesignator]
                                                           ) [MultipleTerm]
                                                         ) [ExprPositive]
                                                       ) [DesignatorEqualExpr]
                                                     ) [StatementDesignator]
                                                   ) [StatementListMultiple]
                                                   StatementDesignator(
                                                     DesignatorDecrement(
                                                       DesignatorIdent(
                                                        bodovi
                                                       ) [DesignatorIdent]
                                                     ) [DesignatorDecrement]
                                                   ) [StatementDesignator]
                                                 ) [StatementListMultiple]
                                                 StatementPrint(
                                                   ExprPositive(
                                                     SignleTerm(
                                                       FactorDesignator(
                                                         DesignatorIdent(
                                                          bodovi
                                                         ) [DesignatorIdent]
                                                       ) [FactorDesignator]
                                                     ) [SignleTerm]
                                                   ) [ExprPositive]
                                                 ) [StatementPrint]
                                               ) [StatementListMultiple]
                                               StatementPrint(
                                                 ExprPositive(
                                                   SignleTerm(
                                                     FactorDesignator(
                                                       DesignatorIdent(
                                                        eol
                                                       ) [DesignatorIdent]
                                                     ) [FactorDesignator]
                                                   ) [SignleTerm]
                                                 ) [ExprPositive]
                                               ) [StatementPrint]
                                             ) [StatementListMultiple]
                                             StatementDesignator(
                                               DesignatorEqualExpr(
                                                 DesignatorIdent(
                                                  niz
                                                 ) [DesignatorIdent]
                                                 ExprPositive(
                                                   SignleTerm(
                                                     FactorNewExprArray(
                                                       Type(
                                                        int
                                                       ) [Type]
                                                       ExprPositive(
                                                         SignleTerm(
                                                           FactorConst(
                                                             ConstTypeNumber(
                                                              3
                                                             ) [ConstTypeNumber]
                                                           ) [FactorConst]
                                                         ) [SignleTerm]
                                                       ) [ExprPositive]
                                                     ) [FactorNewExprArray]
                                                   ) [SignleTerm]
                                                 ) [ExprPositive]
                                               ) [DesignatorEqualExpr]
                                             ) [StatementDesignator]
                                           ) [StatementListMultiple]
                                           StatementPrint(
                                             ExprPositive(
                                               SignleTerm(
                                                 FactorDesignator(
                                                   DesignatorIdent(
                                                    bodovi
                                                   ) [DesignatorIdent]
                                                 ) [FactorDesignator]
                                               ) [SignleTerm]
                                             ) [ExprPositive]
                                           ) [StatementPrint]
                                         ) [StatementListMultiple]
                                         StatementPrint(
                                           ExprPositive(
                                             SignleTerm(
                                               FactorDesignator(
                                                 DesignatorIdent(
                                                  eol
                                                 ) [DesignatorIdent]
                                               ) [FactorDesignator]
                                             ) [SignleTerm]
                                           ) [ExprPositive]
                                         ) [StatementPrint]
                                       ) [StatementListMultiple]
                                       StatementPrint(
                                         ExprPositive(
                                           SignleTerm(
                                             FactorDesignator(
                                               DesignatorIdent(
                                                eol
                                               ) [DesignatorIdent]
                                             ) [FactorDesignator]
                                           ) [SignleTerm]
                                         ) [ExprPositive]
                                       ) [StatementPrint]
                                     ) [StatementListMultiple]
                                     StatementPrint(
                                       ExprPositive(
                                         SignleTerm(
                                           FactorDesignator(
                                             DesignatorIdent(
                                              eol
                                             ) [DesignatorIdent]
                                           ) [FactorDesignator]
                                         ) [SignleTerm]
                                       ) [ExprPositive]
                                     ) [StatementPrint]
                                   ) [StatementListMultiple]
                                   StatementPrint(
                                     ExprPositive(
                                       SignleTerm(
                                         FactorDesignator(
                                           DesignatorIdent(
                                            eol
                                           ) [DesignatorIdent]
                                         ) [FactorDesignator]
                                       ) [SignleTerm]
                                     ) [ExprPositive]
                                   ) [StatementPrint]
                                 ) [StatementListMultiple]
                                 StatementDesignator(
                                   DesignatorEqualExpr(
                                     DesignatorIdent(
                                      a
                                     ) [DesignatorIdent]
                                     ExprPositive(
                                       SignleTerm(
                                         FactorConst(
                                           ConstTypeNumber(
                                            1
                                           ) [ConstTypeNumber]
                                         ) [FactorConst]
                                       ) [SignleTerm]
                                     ) [ExprPositive]
                                   ) [DesignatorEqualExpr]
                                 ) [StatementDesignator]
                               ) [StatementListMultiple]
                               StatementRead(
                                 DesignatorIdent(
                                  bodovi
                                 ) [DesignatorIdent]
                               ) [StatementRead]
                             ) [StatementListMultiple]
                             StatementDesignator(
                               DesignatorEqualExpr(
                                 DesignatorIdent(
                                  bodovi
                                 ) [DesignatorIdent]
                                 ExprAddop(
                                   ExprAddop(
                                     ExprNegative(
                                       SignleTerm(
                                         FactorDesignator(
                                           DesignatorIdent(
                                            bodovi
                                           ) [DesignatorIdent]
                                         ) [FactorDesignator]
                                       ) [SignleTerm]
                                     ) [ExprNegative]
                                     Plus(
                                     ) [Plus]
                                     MultipleTerm(
                                       SignleTerm(
                                         FactorExpr(
                                           ExprAddop(
                                             ExprPositive(
                                               MultipleTerm(
                                                 MultipleTerm(
                                                   SignleTerm(
                                                     FactorDesignator(
                                                       DesignatorIdent(
                                                        pet
                                                       ) [DesignatorIdent]
                                                     ) [FactorDesignator]
                                                   ) [SignleTerm]
                                                   Mul(
                                                   ) [Mul]
                                                   FactorDesignator(
                                                     DesignatorIdent(
                                                      a
                                                     ) [DesignatorIdent]
                                                   ) [FactorDesignator]
                                                 ) [MultipleTerm]
                                                 Div(
                                                 ) [Div]
                                                 FactorConst(
                                                   ConstTypeNumber(
                                                    2
                                                   ) [ConstTypeNumber]
                                                 ) [FactorConst]
                                               ) [MultipleTerm]
                                             ) [ExprPositive]
                                             Minus(
                                             ) [Minus]
                                             SignleTerm(
                                               FactorDesignator(
                                                 DesignatorIdent(
                                                  nula
                                                 ) [DesignatorIdent]
                                               ) [FactorDesignator]
                                             ) [SignleTerm]
                                           ) [ExprAddop]
                                         ) [FactorExpr]
                                       ) [SignleTerm]
                                       Mul(
                                       ) [Mul]
                                       FactorDesignator(
                                         DesignatorIdent(
                                          bodovi
                                         ) [DesignatorIdent]
                                       ) [FactorDesignator]
                                     ) [MultipleTerm]
                                   ) [ExprAddop]
                                   Minus(
                                   ) [Minus]
                                   SignleTerm(
                                     FactorExpr(
                                       ExprAddop(
                                         ExprAddop(
                                           ExprPositive(
                                             MultipleTerm(
                                               SignleTerm(
                                                 FactorConst(
                                                   ConstTypeNumber(
                                                    3
                                                   ) [ConstTypeNumber]
                                                 ) [FactorConst]
                                               ) [SignleTerm]
                                               Mod(
                                               ) [Mod]
                                               FactorConst(
                                                 ConstTypeNumber(
                                                  2
                                                 ) [ConstTypeNumber]
                                               ) [FactorConst]
                                             ) [MultipleTerm]
                                           ) [ExprPositive]
                                           Plus(
                                           ) [Plus]
                                           MultipleTerm(
                                             SignleTerm(
                                               FactorConst(
                                                 ConstTypeNumber(
                                                  3
                                                 ) [ConstTypeNumber]
                                               ) [FactorConst]
                                             ) [SignleTerm]
                                             Mul(
                                             ) [Mul]
                                             FactorConst(
                                               ConstTypeNumber(
                                                2
                                               ) [ConstTypeNumber]
                                             ) [FactorConst]
                                           ) [MultipleTerm]
                                         ) [ExprAddop]
                                         Minus(
                                         ) [Minus]
                                         SignleTerm(
                                           FactorConst(
                                             ConstTypeNumber(
                                              7
                                             ) [ConstTypeNumber]
                                           ) [FactorConst]
                                         ) [SignleTerm]
                                       ) [ExprAddop]
                                     ) [FactorExpr]
                                   ) [SignleTerm]
                                 ) [ExprAddop]
                               ) [DesignatorEqualExpr]
                             ) [StatementDesignator]
                           ) [StatementListMultiple]
                           StatementPrint(
                             ExprPositive(
                               SignleTerm(
                                 FactorDesignator(
                                   DesignatorIdent(
                                    bodovi
                                   ) [DesignatorIdent]
                                 ) [FactorDesignator]
                               ) [SignleTerm]
                             ) [ExprPositive]
                           ) [StatementPrint]
                         ) [StatementListMultiple]
                         StatementDesignator(
                           DesignatorEqualExpr(
                             DesignatorIdent(
                              s1
                             ) [DesignatorIdent]
                             ExprPositive(
                               SignleTerm(
                                 FactorNewExprArray(
                                   Type(
                                    set
                                   ) [Type]
                                   ExprPositive(
                                     SignleTerm(
                                       FactorConst(
                                         ConstTypeNumber(
                                          5
                                         ) [ConstTypeNumber]
                                       ) [FactorConst]
                                     ) [SignleTerm]
                                   ) [ExprPositive]
                                 ) [FactorNewExprArray]
                               ) [SignleTerm]
                             ) [ExprPositive]
                           ) [DesignatorEqualExpr]
                         ) [StatementDesignator]
                       ) [StatementListMultiple]
                       StatementDesignator(
                         DesignatorEqualExpr(
                           DesignatorIdent(
                            s2
                           ) [DesignatorIdent]
                           ExprPositive(
                             SignleTerm(
                               FactorNewExprArray(
                                 Type(
                                  set
                                 ) [Type]
                                 ExprPositive(
                                   SignleTerm(
                                     FactorConst(
                                       ConstTypeNumber(
                                        5
                                       ) [ConstTypeNumber]
                                     ) [FactorConst]
                                   ) [SignleTerm]
                                 ) [ExprPositive]
                               ) [FactorNewExprArray]
                             ) [SignleTerm]
                           ) [ExprPositive]
                         ) [DesignatorEqualExpr]
                       ) [StatementDesignator]
                     ) [StatementListMultiple]
                     StatementDesignator(
                       DesignatorEqualExpr(
                         DesignatorIdent(
                          s3
                         ) [DesignatorIdent]
                         ExprPositive(
                           SignleTerm(
                             FactorNewExprArray(
                               Type(
                                set
                               ) [Type]
                               ExprPositive(
                                 SignleTerm(
                                   FactorConst(
                                     ConstTypeNumber(
                                      10
                                     ) [ConstTypeNumber]
                                   ) [FactorConst]
                                 ) [SignleTerm]
                               ) [ExprPositive]
                             ) [FactorNewExprArray]
                           ) [SignleTerm]
                         ) [ExprPositive]
                       ) [DesignatorEqualExpr]
                     ) [StatementDesignator]
                   ) [StatementListMultiple]
                   StatementPrint(
                     ExprPositive(
                       SignleTerm(
                         FactorDesignator(
                           DesignatorIdent(
                            s3
                           ) [DesignatorIdent]
                         ) [FactorDesignator]
                       ) [SignleTerm]
                     ) [ExprPositive]
                   ) [StatementPrint]
                 ) [StatementListMultiple]
                 StatementPrint(
                   ExprPositive(
                     SignleTerm(
                       FactorDesignator(
                         DesignatorIdent(
                          eol
                         ) [DesignatorIdent]
                       ) [FactorDesignator]
                     ) [SignleTerm]
                   ) [ExprPositive]
                 ) [StatementPrint]
               ) [StatementListMultiple]
               StatementDesignator(
                 DesignatorEqualExpr(
                   DesignatorIdent(
                    s1
                   ) [DesignatorIdent]
                   ExprPositive(
                     SignleTerm(
                       FactorNewExprArray(
                         Type(
                          set
                         ) [Type]
                         ExprPositive(
                           SignleTerm(
                             FactorConst(
                               ConstTypeNumber(
                                5
                               ) [ConstTypeNumber]
                             ) [FactorConst]
                           ) [SignleTerm]
                         ) [ExprPositive]
                       ) [FactorNewExprArray]
                     ) [SignleTerm]
                   ) [ExprPositive]
                 ) [DesignatorEqualExpr]
               ) [StatementDesignator]
             ) [StatementListMultiple]
             StatementDesignator(
               DesignatorEqualExpr(
                 DesignatorIdent(
                  s2
                 ) [DesignatorIdent]
                 ExprPositive(
                   SignleTerm(
                     FactorNewExprArray(
                       Type(
                        set
                       ) [Type]
                       ExprPositive(
                         SignleTerm(
                           FactorConst(
                             ConstTypeNumber(
                              5
                             ) [ConstTypeNumber]
                           ) [FactorConst]
                         ) [SignleTerm]
                       ) [ExprPositive]
                     ) [FactorNewExprArray]
                   ) [SignleTerm]
                 ) [ExprPositive]
               ) [DesignatorEqualExpr]
             ) [StatementDesignator]
           ) [StatementListMultiple]
           StatementDesignator(
             DesignatorEqualExpr(
               DesignatorIdent(
                s3
               ) [DesignatorIdent]
               ExprPositive(
                 SignleTerm(
                   FactorNewExprArray(
                     Type(
                      set
                     ) [Type]
                     ExprPositive(
                       SignleTerm(
                         FactorConst(
                           ConstTypeNumber(
                            10
                           ) [ConstTypeNumber]
                         ) [FactorConst]
                       ) [SignleTerm]
                     ) [ExprPositive]
                   ) [FactorNewExprArray]
                 ) [SignleTerm]
               ) [ExprPositive]
             ) [DesignatorEqualExpr]
           ) [StatementDesignator]
         ) [StatementListMultiple]
         StatementPrint(
           ExprPositive(
             SignleTerm(
               FactorDesignator(
                 DesignatorIdent(
                  s3
                 ) [DesignatorIdent]
               ) [FactorDesignator]
             ) [SignleTerm]
           ) [ExprPositive]
         ) [StatementPrint]
       ) [StatementListMultiple]
     ) [MethodDeclaration]
   ) [MethodDeclarationListMultiple]
 ) [Program]
INFO  23:20:49,347 - ==========================================================================================
INFO  23:20:49,348 - Checking program semantics
INFO  23:20:49,348 - ==========================================================================================
ERROR 23:20:49,353 - Tip deklarisane promenljive se mora poklapati sa tipom podatka. na liniji 40
INFO  23:20:49,354 - ==========================================================================================
INFO  23:20:49,354 - Semantic check passed
INFO  23:20:49,354 - ==========================================================================================
