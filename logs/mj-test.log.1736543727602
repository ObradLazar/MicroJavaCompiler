INFO  22:14:39,192 - ==========================================================================================
INFO  22:14:39,193 - Compiling source file C:\Users\LENOVO\Desktop\Njihov projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\.\test\set.mj
INFO  22:14:39,193 - ==========================================================================================
INFO  22:14:39,197 - Parsing source file
INFO  22:14:39,197 - ==========================================================================================
INFO  22:14:39,217 - #2 program
INFO  22:14:39,217 - #29 test301
INFO  22:14:39,217 - #7 const
INFO  22:14:39,218 - #29 int
INFO  22:14:39,218 - #29 nula
INFO  22:14:39,219 - #12 =
INFO  22:14:39,219 - #26 0
INFO  22:14:39,219 - #9 ;
INFO  22:14:39,220 - #7 const
INFO  22:14:39,221 - #29 int
INFO  22:14:39,221 - #29 jedan
INFO  22:14:39,221 - #12 =
INFO  22:14:39,221 - #26 1
INFO  22:14:39,221 - #9 ;
INFO  22:14:39,221 - #7 const
INFO  22:14:39,221 - #29 int
INFO  22:14:39,221 - #29 pet
INFO  22:14:39,221 - #12 =
INFO  22:14:39,221 - #26 5
INFO  22:14:39,221 - #9 ;
INFO  22:14:39,221 - #29 int
INFO  22:14:39,221 - #29 niz
INFO  22:14:39,221 - #22 [
INFO  22:14:39,222 - #23 ]
INFO  22:14:39,222 - #9 ;
INFO  22:14:39,222 - #29 char
INFO  22:14:39,222 - #29 nizch
INFO  22:14:39,223 - #22 [
INFO  22:14:39,223 - #23 ]
INFO  22:14:39,223 - #9 ;
INFO  22:14:39,223 - #29 int
INFO  22:14:39,223 - #29 a
INFO  22:14:39,223 - #9 ;
INFO  22:14:39,223 - #29 set
INFO  22:14:39,223 - #29 s1
INFO  22:14:39,223 - #10 ,
INFO  22:14:39,223 - #29 s2
INFO  22:14:39,223 - #10 ,
INFO  22:14:39,223 - #29 s3
INFO  22:14:39,223 - #9 ;
INFO  22:14:39,223 - #20 {
INFO  22:14:39,223 - #3 void
INFO  22:14:39,224 - #29 main
INFO  22:14:39,225 - #24 (
INFO  22:14:39,225 - #25 )
INFO  22:14:39,226 - #29 int
INFO  22:14:39,226 - #29 bodovi
INFO  22:14:39,226 - #9 ;
INFO  22:14:39,226 - #29 int
INFO  22:14:39,226 - #29 temp
INFO  22:14:39,226 - #9 ;
INFO  22:14:39,226 - #20 {
INFO  22:14:39,226 - #29 niz
INFO  22:14:39,227 - #12 =
INFO  22:14:39,227 - #6 new
INFO  22:14:39,227 - #29 int
INFO  22:14:39,227 - #22 [
INFO  22:14:39,227 - #26 3
INFO  22:14:39,227 - #23 ]
INFO  22:14:39,228 - #9 ;
INFO  22:14:39,228 - #29 niz
INFO  22:14:39,228 - #22 [
INFO  22:14:39,229 - #26 0
INFO  22:14:39,229 - #23 ]
INFO  22:14:39,229 - #12 =
INFO  22:14:39,229 - #26 1
INFO  22:14:39,229 - #9 ;
INFO  22:14:39,229 - #29 niz
INFO  22:14:39,229 - #22 [
INFO  22:14:39,229 - #26 1
INFO  22:14:39,229 - #23 ]
INFO  22:14:39,229 - #12 =
INFO  22:14:39,229 - #26 2
INFO  22:14:39,229 - #9 ;
INFO  22:14:39,229 - #29 niz
INFO  22:14:39,229 - #22 [
INFO  22:14:39,229 - #26 2
INFO  22:14:39,230 - #23 ]
INFO  22:14:39,230 - #12 =
INFO  22:14:39,230 - #26 3
INFO  22:14:39,230 - #9 ;
INFO  22:14:39,230 - #29 s1
INFO  22:14:39,230 - #12 =
INFO  22:14:39,230 - #6 new
INFO  22:14:39,230 - #29 set
INFO  22:14:39,230 - #22 [
INFO  22:14:39,230 - #26 5
INFO  22:14:39,230 - #23 ]
INFO  22:14:39,230 - #9 ;
INFO  22:14:39,230 - #29 s2
INFO  22:14:39,230 - #12 =
INFO  22:14:39,230 - #6 new
INFO  22:14:39,230 - #29 set
INFO  22:14:39,230 - #22 [
INFO  22:14:39,230 - #26 5
INFO  22:14:39,230 - #23 ]
INFO  22:14:39,231 - #9 ;
INFO  22:14:39,231 - #29 s3
INFO  22:14:39,231 - #12 =
INFO  22:14:39,231 - #6 new
INFO  22:14:39,231 - #29 set
INFO  22:14:39,231 - #22 [
INFO  22:14:39,231 - #26 10
INFO  22:14:39,231 - #23 ]
INFO  22:14:39,231 - #9 ;
INFO  22:14:39,231 - #29 add
INFO  22:14:39,231 - #24 (
INFO  22:14:39,231 - #29 s1
INFO  22:14:39,231 - #10 ,
INFO  22:14:39,231 - #26 1
INFO  22:14:39,231 - #25 )
INFO  22:14:39,231 - #9 ;
INFO  22:14:39,232 - #29 add
INFO  22:14:39,232 - #24 (
INFO  22:14:39,232 - #29 s1
INFO  22:14:39,232 - #10 ,
INFO  22:14:39,232 - #26 1
INFO  22:14:39,232 - #25 )
INFO  22:14:39,232 - #9 ;
INFO  22:14:39,232 - #29 add
INFO  22:14:39,232 - #24 (
INFO  22:14:39,232 - #29 s1
INFO  22:14:39,232 - #10 ,
INFO  22:14:39,232 - #26 2
INFO  22:14:39,232 - #25 )
INFO  22:14:39,232 - #9 ;
INFO  22:14:39,232 - #4 print
INFO  22:14:39,232 - #24 (
INFO  22:14:39,232 - #29 s1
INFO  22:14:39,232 - #25 )
INFO  22:14:39,232 - #9 ;
INFO  22:14:39,233 - #4 print
INFO  22:14:39,233 - #24 (
INFO  22:14:39,233 - #29 eol
INFO  22:14:39,233 - #25 )
INFO  22:14:39,233 - #9 ;
INFO  22:14:39,233 - #29 addAll
INFO  22:14:39,233 - #24 (
INFO  22:14:39,233 - #29 s2
INFO  22:14:39,233 - #10 ,
INFO  22:14:39,233 - #29 niz
INFO  22:14:39,233 - #25 )
INFO  22:14:39,233 - #9 ;
INFO  22:14:39,233 - #4 print
INFO  22:14:39,233 - #24 (
INFO  22:14:39,233 - #29 s2
INFO  22:14:39,233 - #25 )
INFO  22:14:39,233 - #9 ;
INFO  22:14:39,234 - #21 }
INFO  22:14:39,234 - #21 }
INFO  22:14:39,235 - ==========================================================================================
INFO  22:14:39,235 - Parsing successful
INFO  22:14:39,235 - ==========================================================================================
INFO  22:14:39,236 - Abstract syntax tree
 Program(
   ProgramName(
    test301
   ) [ProgramName]
   DeclarationList(
     DeclarationList(
       DeclarationList(
         DeclarationList(
           DeclarationList(
             DeclarationList(
               DeclarationList(
                 NoDeclarationList(
                 ) [NoDeclarationList]
                 DeclarationConstant(
                   ConstDecl(
                     Type(
                      int
                     ) [Type]
                     ConstDeclListSignle(
                       ConstDeclaration(
                        nula
                         ConstTypeNumber(
                          0
                         ) [ConstTypeNumber]
                       ) [ConstDeclaration]
                     ) [ConstDeclListSignle]
                   ) [ConstDecl]
                 ) [DeclarationConstant]
               ) [DeclarationList]
               DeclarationConstant(
                 ConstDecl(
                   Type(
                    int
                   ) [Type]
                   ConstDeclListSignle(
                     ConstDeclaration(
                      jedan
                       ConstTypeNumber(
                        1
                       ) [ConstTypeNumber]
                     ) [ConstDeclaration]
                   ) [ConstDeclListSignle]
                 ) [ConstDecl]
               ) [DeclarationConstant]
             ) [DeclarationList]
             DeclarationConstant(
               ConstDecl(
                 Type(
                  int
                 ) [Type]
                 ConstDeclListSignle(
                   ConstDeclaration(
                    pet
                     ConstTypeNumber(
                      5
                     ) [ConstTypeNumber]
                   ) [ConstDeclaration]
                 ) [ConstDeclListSignle]
               ) [ConstDecl]
             ) [DeclarationConstant]
           ) [DeclarationList]
           DeclarationVariable(
             VarDecl(
               Type(
                int
               ) [Type]
               VarDeclListSingle(
                 VariableArray(
                  niz
                 ) [VariableArray]
               ) [VarDeclListSingle]
             ) [VarDecl]
           ) [DeclarationVariable]
         ) [DeclarationList]
         DeclarationVariable(
           VarDecl(
             Type(
              char
             ) [Type]
             VarDeclListSingle(
               VariableArray(
                nizch
               ) [VariableArray]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [DeclarationVariable]
       ) [DeclarationList]
       DeclarationVariable(
         VarDecl(
           Type(
            int
           ) [Type]
           VarDeclListSingle(
             VariableIdent(
              a
             ) [VariableIdent]
           ) [VarDeclListSingle]
         ) [VarDecl]
       ) [DeclarationVariable]
     ) [DeclarationList]
     DeclarationVariable(
       VarDecl(
         Type(
          set
         ) [Type]
         VarDeclListMultiple(
           VarDeclListMultiple(
             VarDeclListSingle(
               VariableIdent(
                s1
               ) [VariableIdent]
             ) [VarDeclListSingle]
             VariableIdent(
              s2
             ) [VariableIdent]
           ) [VarDeclListMultiple]
           VariableIdent(
            s3
           ) [VariableIdent]
         ) [VarDeclListMultiple]
       ) [VarDecl]
     ) [DeclarationVariable]
   ) [DeclarationList]
   MethodDeclarationListMultiple(
     NoMethodDeclList(
     ) [NoMethodDeclList]
     MethodDeclaration(
       MethVoid(
       ) [MethVoid]
       MethodName(
        main
       ) [MethodName]
       NoFormPars(
       ) [NoFormPars]
       VarDeclarationArray(
         VarDeclarationArray(
           NoVarDeclarationArray(
           ) [NoVarDeclarationArray]
           VarDecl(
             Type(
              int
             ) [Type]
             VarDeclListSingle(
               VariableIdent(
                bodovi
               ) [VariableIdent]
             ) [VarDeclListSingle]
           ) [VarDecl]
         ) [VarDeclarationArray]
         VarDecl(
           Type(
            int
           ) [Type]
           VarDeclListSingle(
             VariableIdent(
              temp
             ) [VariableIdent]
           ) [VarDeclListSingle]
         ) [VarDecl]
       ) [VarDeclarationArray]
       StatementListMultiple(
         StatementListMultiple(
           StatementListMultiple(
             StatementListMultiple(
               StatementListMultiple(
                 StatementListMultiple(
                   StatementListMultiple(
                     StatementListMultiple(
                       StatementListMultiple(
                         StatementListMultiple(
                           StatementListMultiple(
                             StatementListMultiple(
                               StatementListMultiple(
                                 StatementListMultiple(
                                   NoStatementList(
                                   ) [NoStatementList]
                                   StatementDesignator(
                                     DesignatorEqualExpr(
                                       DesignatorIdent(
                                        niz
                                       ) [DesignatorIdent]
                                       ExprPositive(
                                         SignleTerm(
                                           FactorNewExprArray(
                                             Type(
                                              int
                                             ) [Type]
                                             ExprPositive(
                                               SignleTerm(
                                                 FactorConst(
                                                   ConstTypeNumber(
                                                    3
                                                   ) [ConstTypeNumber]
                                                 ) [FactorConst]
                                               ) [SignleTerm]
                                             ) [ExprPositive]
                                           ) [FactorNewExprArray]
                                         ) [SignleTerm]
                                       ) [ExprPositive]
                                     ) [DesignatorEqualExpr]
                                   ) [StatementDesignator]
                                 ) [StatementListMultiple]
                                 StatementDesignator(
                                   DesignatorEqualExpr(
                                     DesignatorIdentExpr(
                                       DesignatorArrayName(
                                        niz
                                       ) [DesignatorArrayName]
                                       ExprPositive(
                                         SignleTerm(
                                           FactorConst(
                                             ConstTypeNumber(
                                              0
                                             ) [ConstTypeNumber]
                                           ) [FactorConst]
                                         ) [SignleTerm]
                                       ) [ExprPositive]
                                     ) [DesignatorIdentExpr]
                                     ExprPositive(
                                       SignleTerm(
                                         FactorConst(
                                           ConstTypeNumber(
                                            1
                                           ) [ConstTypeNumber]
                                         ) [FactorConst]
                                       ) [SignleTerm]
                                     ) [ExprPositive]
                                   ) [DesignatorEqualExpr]
                                 ) [StatementDesignator]
                               ) [StatementListMultiple]
                               StatementDesignator(
                                 DesignatorEqualExpr(
                                   DesignatorIdentExpr(
                                     DesignatorArrayName(
                                      niz
                                     ) [DesignatorArrayName]
                                     ExprPositive(
                                       SignleTerm(
                                         FactorConst(
                                           ConstTypeNumber(
                                            1
                                           ) [ConstTypeNumber]
                                         ) [FactorConst]
                                       ) [SignleTerm]
                                     ) [ExprPositive]
                                   ) [DesignatorIdentExpr]
                                   ExprPositive(
                                     SignleTerm(
                                       FactorConst(
                                         ConstTypeNumber(
                                          2
                                         ) [ConstTypeNumber]
                                       ) [FactorConst]
                                     ) [SignleTerm]
                                   ) [ExprPositive]
                                 ) [DesignatorEqualExpr]
                               ) [StatementDesignator]
                             ) [StatementListMultiple]
                             StatementDesignator(
                               DesignatorEqualExpr(
                                 DesignatorIdentExpr(
                                   DesignatorArrayName(
                                    niz
                                   ) [DesignatorArrayName]
                                   ExprPositive(
                                     SignleTerm(
                                       FactorConst(
                                         ConstTypeNumber(
                                          2
                                         ) [ConstTypeNumber]
                                       ) [FactorConst]
                                     ) [SignleTerm]
                                   ) [ExprPositive]
                                 ) [DesignatorIdentExpr]
                                 ExprPositive(
                                   SignleTerm(
                                     FactorConst(
                                       ConstTypeNumber(
                                        3
                                       ) [ConstTypeNumber]
                                     ) [FactorConst]
                                   ) [SignleTerm]
                                 ) [ExprPositive]
                               ) [DesignatorEqualExpr]
                             ) [StatementDesignator]
                           ) [StatementListMultiple]
                           StatementDesignator(
                             DesignatorEqualExpr(
                               DesignatorIdent(
                                s1
                               ) [DesignatorIdent]
                               ExprPositive(
                                 SignleTerm(
                                   FactorNewExprArray(
                                     Type(
                                      set
                                     ) [Type]
                                     ExprPositive(
                                       SignleTerm(
                                         FactorConst(
                                           ConstTypeNumber(
                                            5
                                           ) [ConstTypeNumber]
                                         ) [FactorConst]
                                       ) [SignleTerm]
                                     ) [ExprPositive]
                                   ) [FactorNewExprArray]
                                 ) [SignleTerm]
                               ) [ExprPositive]
                             ) [DesignatorEqualExpr]
                           ) [StatementDesignator]
                         ) [StatementListMultiple]
                         StatementDesignator(
                           DesignatorEqualExpr(
                             DesignatorIdent(
                              s2
                             ) [DesignatorIdent]
                             ExprPositive(
                               SignleTerm(
                                 FactorNewExprArray(
                                   Type(
                                    set
                                   ) [Type]
                                   ExprPositive(
                                     SignleTerm(
                                       FactorConst(
                                         ConstTypeNumber(
                                          5
                                         ) [ConstTypeNumber]
                                       ) [FactorConst]
                                     ) [SignleTerm]
                                   ) [ExprPositive]
                                 ) [FactorNewExprArray]
                               ) [SignleTerm]
                             ) [ExprPositive]
                           ) [DesignatorEqualExpr]
                         ) [StatementDesignator]
                       ) [StatementListMultiple]
                       StatementDesignator(
                         DesignatorEqualExpr(
                           DesignatorIdent(
                            s3
                           ) [DesignatorIdent]
                           ExprPositive(
                             SignleTerm(
                               FactorNewExprArray(
                                 Type(
                                  set
                                 ) [Type]
                                 ExprPositive(
                                   SignleTerm(
                                     FactorConst(
                                       ConstTypeNumber(
                                        10
                                       ) [ConstTypeNumber]
                                     ) [FactorConst]
                                   ) [SignleTerm]
                                 ) [ExprPositive]
                               ) [FactorNewExprArray]
                             ) [SignleTerm]
                           ) [ExprPositive]
                         ) [DesignatorEqualExpr]
                       ) [StatementDesignator]
                     ) [StatementListMultiple]
                     StatementDesignator(
                       DesignatorActPars(
                         DesignatorIdent(
                          add
                         ) [DesignatorIdent]
                         MultipleActPars(
                           SingleActPar(
                             ExprPositive(
                               SignleTerm(
                                 FactorDesignator(
                                   DesignatorIdent(
                                    s1
                                   ) [DesignatorIdent]
                                 ) [FactorDesignator]
                               ) [SignleTerm]
                             ) [ExprPositive]
                           ) [SingleActPar]
                           ExprPositive(
                             SignleTerm(
                               FactorConst(
                                 ConstTypeNumber(
                                  1
                                 ) [ConstTypeNumber]
                               ) [FactorConst]
                             ) [SignleTerm]
                           ) [ExprPositive]
                         ) [MultipleActPars]
                       ) [DesignatorActPars]
                     ) [StatementDesignator]
                   ) [StatementListMultiple]
                   StatementDesignator(
                     DesignatorActPars(
                       DesignatorIdent(
                        add
                       ) [DesignatorIdent]
                       MultipleActPars(
                         SingleActPar(
                           ExprPositive(
                             SignleTerm(
                               FactorDesignator(
                                 DesignatorIdent(
                                  s1
                                 ) [DesignatorIdent]
                               ) [FactorDesignator]
                             ) [SignleTerm]
                           ) [ExprPositive]
                         ) [SingleActPar]
                         ExprPositive(
                           SignleTerm(
                             FactorConst(
                               ConstTypeNumber(
                                1
                               ) [ConstTypeNumber]
                             ) [FactorConst]
                           ) [SignleTerm]
                         ) [ExprPositive]
                       ) [MultipleActPars]
                     ) [DesignatorActPars]
                   ) [StatementDesignator]
                 ) [StatementListMultiple]
                 StatementDesignator(
                   DesignatorActPars(
                     DesignatorIdent(
                      add
                     ) [DesignatorIdent]
                     MultipleActPars(
                       SingleActPar(
                         ExprPositive(
                           SignleTerm(
                             FactorDesignator(
                               DesignatorIdent(
                                s1
                               ) [DesignatorIdent]
                             ) [FactorDesignator]
                           ) [SignleTerm]
                         ) [ExprPositive]
                       ) [SingleActPar]
                       ExprPositive(
                         SignleTerm(
                           FactorConst(
                             ConstTypeNumber(
                              2
                             ) [ConstTypeNumber]
                           ) [FactorConst]
                         ) [SignleTerm]
                       ) [ExprPositive]
                     ) [MultipleActPars]
                   ) [DesignatorActPars]
                 ) [StatementDesignator]
               ) [StatementListMultiple]
               StatementPrint(
                 ExprPositive(
                   SignleTerm(
                     FactorDesignator(
                       DesignatorIdent(
                        s1
                       ) [DesignatorIdent]
                     ) [FactorDesignator]
                   ) [SignleTerm]
                 ) [ExprPositive]
               ) [StatementPrint]
             ) [StatementListMultiple]
             StatementPrint(
               ExprPositive(
                 SignleTerm(
                   FactorDesignator(
                     DesignatorIdent(
                      eol
                     ) [DesignatorIdent]
                   ) [FactorDesignator]
                 ) [SignleTerm]
               ) [ExprPositive]
             ) [StatementPrint]
           ) [StatementListMultiple]
           StatementDesignator(
             DesignatorActPars(
               DesignatorIdent(
                addAll
               ) [DesignatorIdent]
               MultipleActPars(
                 SingleActPar(
                   ExprPositive(
                     SignleTerm(
                       FactorDesignator(
                         DesignatorIdent(
                          s2
                         ) [DesignatorIdent]
                       ) [FactorDesignator]
                     ) [SignleTerm]
                   ) [ExprPositive]
                 ) [SingleActPar]
                 ExprPositive(
                   SignleTerm(
                     FactorDesignator(
                       DesignatorIdent(
                        niz
                       ) [DesignatorIdent]
                     ) [FactorDesignator]
                   ) [SignleTerm]
                 ) [ExprPositive]
               ) [MultipleActPars]
             ) [DesignatorActPars]
           ) [StatementDesignator]
         ) [StatementListMultiple]
         StatementPrint(
           ExprPositive(
             SignleTerm(
               FactorDesignator(
                 DesignatorIdent(
                  s2
                 ) [DesignatorIdent]
               ) [FactorDesignator]
             ) [SignleTerm]
           ) [ExprPositive]
         ) [StatementPrint]
       ) [StatementListMultiple]
     ) [MethodDeclaration]
   ) [MethodDeclarationListMultiple]
 ) [Program]
INFO  22:14:39,236 - ==========================================================================================
INFO  22:14:39,236 - Checking program semantics
INFO  22:14:39,237 - ==========================================================================================
INFO  22:14:39,244 - ==========================================================================================
INFO  22:14:39,244 - Semantic check passed
INFO  22:14:39,244 - ==========================================================================================
INFO  22:14:39,247 - Parsiranje uspesno zavrseno!
